Vagrant::Config.run do |config|
  vm_type = 'javadev'

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = 'lucid64'

  # The url from where the 'config.vm.box' box will be fetched.
  config.vm.box_url = 'http://files.vagrantup.com/lucid64.box'

  # Boot with a GUI so you can see the screen. (Default is headless)
  config.vm.boot_mode = :gui

  # Assign this VM a unique hostname
  config.vm.host_name = "#{ENV['USER']}.#{vm_type}.vagrant.local"

  # Forward a port from the guest to the host (id, guest port, host port)
  config.vm.forward_port 'http', 8080, 8080, :auto => true
  config.vm.forward_port 'jmx',  8081, 8081, :auto => true

  # Enable provisioning with Puppet stand alone.  Puppet manifests
  # are contained in a directory path relative to this Vagrantfile.
  config.vm.provision :puppet do |puppet|
    puppet.manifest_file = "#{vm_type}-ubuntu64.pp"
    puppet.module_path = '../modules'
  end

  # Share a folder to the VM (id, guest path, host path)
  config.vm.share_folder "vagrant-share", "/vagrant-share", "../share"
  config.vm.share_folder "source", "/home/vagrant/home", ENV['HOME']

  # Set memory allocated to the VM in MB
  config.vm.customize do |vm|
    vm.memory_size = 2048
    vm.cpu_count = 4
    vm.vram_size = 16
    vm.accelerate_2d_video_enabled = true
  end

  # Create user-specific .gitconfig file
  gitconfig_file = File.expand_path(File.join(File.dirname(__FILE__), '../share/apps/gitconfig'))
  gitconfig_template = File.expand_path(File.join(File.dirname(__FILE__), '../share/conf/gitconfig.erb'))
  if !File.exists?(gitconfig_file)
    puts 'Enter your full name:'
    full_name = STDIN.gets.chomp
    puts 'Enter your email address:'
    email = STDIN.gets.chomp
    File.open(gitconfig_file, 'w') do |file|
      file.write(ERB.new(File.read(gitconfig_template)).result(binding))
    end
  end
end

